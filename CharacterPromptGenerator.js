//Character Prompt Generator - JS

function createCharacter() {
  
//Generates (Name)
  function generateName() {
    let outputName = "";
    let firstSyllable = ["Aa", "Ba", "Ca", "Da", "Ea", "Fa", "Ga", "Ha", "Ia", "Ja", "Ka", "La", "Ma", "Na", "Oa", "Pa", "Qa", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "Ae", "Be", "Ce", "De", "Ee", "Fe", "Ge", "He", "Ie", "Je", "Ke", "Le", "Me", "Ne", "Oe", "Pe", "Qe", "Re", "Se", "Te", "Ue", "Ve", "We", "Xe", "Ye", "Ze", "Ai", "Bi", "Ci", "Di", "Ei", "Fi", "Gi", "Hi", "Ii", "Ji", "Ki", "Li", "Mi", "Ni", "Oi", "Pi", "Qi", "Ri", "Si", "Ti", "Ui", "Vi", "Wi", "Xi", "Yi", "Zi", "Ao", "Bo", "Co", "Do", "Eo", "Fo", "Go", "Ho", "Io", "Jo", "Ko", "Lo", "Mo", "No", "Oo", "Po", "Qo", "Ro", "So", "To", "Uo", "Vo", "Wo", "Xo", "Yo", "Zo", "Au", "Bu", "Cu", "Du", "Eu", "Fu", "Gu", "Hu", "Iu", "Ju", "Ku", "Lu", "Mu", "Nu", "Ou", "Pu", "Qu", "Ru", "Su", "Tu", "Uu", "Vu", "Wu", "Xu", "Yu", "Zu", "Ay", "By", "Cy", "Dy", "Ey", "Fy", "Gy", "Hy", "Iy", "Jy", "Ky", "Ly", "My", "Ny", "Oy", "Py", "Qy", "Ry", "Sy", "Ty", "Uy", "Vy", "Wy", "Xy", "Yy", "Zy", "Aar", "Bar", "Mar", "Tar", "Bar", "Sar", "Lar", "Var", "Jar", "Par", "Dar", "Kyr", "Syr", "Lyr", "Gyr", "Pyr", "Hyr", "Myr", "Nyr", "Cyr", "Fyr", "San", "Tan", "Jan", "Ban", "Man", "Fan", "Wan", "Dan", "Han", "Ka", "Sa", "Ba", "Ta", "La", "Da", "Pa", "Ga", "Wa", "Za", "Wes", "Bes", "Tes", "Hes", "Nes", "Mes", "Ves", "Ges", "Ces", "Jes", "Ash", "Alys", "Ami", "Ai", "Bo", "Bess", "Bon", "Bit", "Bom", "Ches", "Chi", "Cass", "Char", "Dex", "Dys", "Den", "Dox", "Dy", "Elm", "Ella", "Emma", "Endra", "Fox", "Fir", "Fal", "Fran", "Fray", "Gre", "Gro", "Gran", "Gor", "Ger", "Hell", "Hex", "Hayl", "Hea", "Ir", "Isi", "Isa", "Imma", "Jax", "Jen", "Jam", "Jos", "Kat", "Kel", "Kath", "Kenn", "Kax", "Lemm", "Lac", "Lax", "Lux", "Lenn", "Marc", "Merc", "Mere", "Max", "Nox", "Nata", "Nat", "Nix", "Ox", "Oap", "Oar", "Pau", "Pet", "Pat", "Ques", "Qua", "Ram", "Ros", "Russ", "Red", "Rex", "Rox", "Scar", "Sir", "Sam", "Tru", "Thad", "Thelm", "Tren", "Urs", "Uma", "Vox", "Vex", "Ven", "Vir", "Vic", "Wex", "Wen", "Wes", "War", "Xyr", "Xir", "Yenn", "Yel", "Zen", "Zir"];                                      
    let secondSyllable = ["", "aa", "ba", "ca", "da", "ea", "fa", "ga", "ha", "ia", "ja", "ka", "la", "ma", "na", "oa", "pa", "qa", "ra", "sa", "ta", "ua", "va", "wa", "xa", "ya", "za", "ae", "be", "ce", "de", "ee", "fe", "ge", "he", "ie", "je", "ke", "le", "me", "ne", "oe", "pe", "qe", "re", "se", "te", "ue", "ve", "we", "xe", "ye", "ze", "ai", "bi", "ci", "di", "ei", "fi", "gi", "hi", "ii", "ji", "ki", "li", "mi", "ni", "oi", "pi", "qi", "ri", "si", "ti", "ui", "vi", "wi", "xi", "yi", "zi", "ao", "bo", "co", "do", "eo", "fo", "go", "ho", "io", "jo", "ko", "lo", "mo", "no", "oo", "po", "qo", "ro", "so", "to", "uo", "vo", "wo", "xo", "yo", "zo", "au", "bu", "cu", "du", "eu", "fu", "gu", "hu", "iu", "ju", "ku", "lu", "mu", "nu", "ou", "pu", "qu", "ru", "su", "tu", "uu", "vu", "wu", "xu", "yu", "zu", "ay", "by", "cy", "dy", "ey", "fy", "gy", "hy", "iy", "jy", "ky", "ly", "my", "ny", "oy", "py", "qy", "ry", "sy", "ty", "uy", "vy", "wy", "xy", "yy", "zy", "os", "yr", "net", "or", "sir", "ken", "set", "rin", "rine", "lye", "tha", "as", "ir", "ur", "ayr", "ox", "art", "thur", "thos", "tor", "roy", "ross", "uma", "us", "deus", "doxus", "erin", "nett", "dent", "theus", "sun", "san", "sen", "rund", "ross", "jet", "jes", "jos", "jur", "yet", "yos", "yur", "bent", "bor", "bon", "bex", "grant", "gess", "gessa", "vet", "vox", "venta", "cass", "cos", "cur", "con", "xir", "zet", "zir", "att", "art", "at", "quet", "quoss", "wess", "wos", "wyatt", "emett", "ennet", "elyn", "ellas", "ella", "rot", "rior", "r", "o", "a", "y", "i", "e", "u", "s", "t", "er", "os", "ya", "us", "gret", "han", "ham", "har", "jet", "jam", "jan", "jea", "uma", "una", "ur", "irma", "is", "ka", "kan", "kir", "kky", "kki", "kis", "nor", "nox", "nix", "nd", "rd", "mod", "mend", "mor", "moss", "mass", "ddeus", "antha", "ossa", "anda", "andra", "les", "let", "lor", "loss", "lux", "lye", "yle", "lyle", "por", "per", "par", "doss", "dent", "lett", "grant", "ger", "rin", "ron", "ious", "angia"];
    
    //outputName randomly generated 1-3 syllables long; 1st from firstSyllable array, 2nd & 3rd from secondSyllable array 
    outputName += firstSyllable[Math.floor(Math.random() * firstSyllable.length)];
    let randomNum = Math.floor(Math.random() * 3);
    for (let i = 0; i < randomNum; i++) {     
        outputName += secondSyllable[Math.floor(Math.random() * secondSyllable.length)];
    }
    return outputName;  
  }
  let sylGenerated = generateName();
  
//Options by category
  let descripOptions = ['Absolute', 'Academic', 'Adventurous', 'Aggravated', 'Aggressive', 'Agreeable', 'Alert', 'Ambitious', 'Amused', 'Ancient', 'Angry', 'Arrogant', 'Athletic', 'Austere', 'Awkward', 'Barren', 'Beautiful', 'Bearded', 'Betrayed', 'Betrayer', 'Boastful', 'Bold', 'Bored', 'Bossy', 'Bright', 'Brutal', 'Blessed', 'Calm', 'Capricious', 'Cautious', 'Charming', 'Cheerful', 'Clever', 'Clumsy', 'Confident', 'Contrary', 'Colossal', 'Corpulent', 'Cosmic', 'Courageous', 'Cowardly', 'Credible', 'Critical', 'Cruel', 'Cultured', 'Curious', 'Cursed', 'Cynical', 'Damned', 'Daring', 'Dashing', 'Debonair', 'Decorated', 'Deceitful', 'Deliberate', 'Deranged', 'Destitute', 'Desolate', 'Devoted', 'Diligent', 'Diminutive', 'Disagreeable', 'Discreet', 'Dishonest', 'Distracted', 'Doomed', 'Dull', 'Dusty', 'Eager', 'Earnest', 'Eccentric', 'Eloquent', 'Enormous', 'Excitable', 'Exuberant', 'Fair', 'Familiar', 'Fearsome', 'Feral', 'Ferocious', 'Fertile', 'Fickle', 'Fierce', 'Flighty', 'Fool', 'Forlorn', 'Frank', 'Fussy', 'Jinxed', 'Gaudy', 'Gauche', 'Gaunt', 'Gentle', 'Gormless', 'Gourmand', 'Grand', 'Great', 'Greedy', 'Grim', 'Gregarious', 'Grumpy', 'Haggard', 'Happy', 'Harsh', 'Haughty', 'Heroic', 'Honest', 'Humble', 'Hungry', 'Impartial', 'Impulsive', 'Intelligent', 'Intuitive', 'Irate', 'Irritable', 'Jaunty', 'Jealous', 'Jolly', 'Just', 'Kind', 'Kindhearted', 'Large', 'Lazy', 'Liar', 'Lonely', 'Lost', 'Loud', 'Loyal', 'Lucky', 'Messy', 'Mighty', 'Missing', 'Modest', 'Monumental', 'Moody', 'Neat', 'Nervous', 'New', 'Noble', 'Obnoxious', 'Optimistic', 'Opulent', 'Ostentatious', 'Passionate', 'Persistent', 'Petite', 'Philosophical', 'Plucky', 'Polite', 'Powerful', 'Practical', 'Prolific', 'Quick', 'Quick-Witted', 'Quiet', 'Radical', 'Rational', 'Reflective', 'Reliable', 'Repulsive', 'Reserved', 'Resourceful', 'Renowned', 'Revolutionary', 'Righteous', 'Rich', 'Robust', 'Romantic', 'Rotund', 'Savage', 'Selfish', 'Sensible', 'Short', 'Shy', 'Sincere', 'Skittish', 'Small', 'Stationary', 'Steadfast', 'Straightforward', 'Stubborn', 'Studious', 'Swift', 'Taciturn', 'Tactful', 'Tactless', 'Talented', 'Tall', 'Thoughtful', 'Thoughtless', 'Thrifty', 'Timid', 'Tough', 'Tranquil', 'Triumphant', 'Truthful', 'Tremendous', 'Unassuming', 'Uncoordinated', 'Unseen', 'Unknown', 'Untrustworthy', 'Vain', 'Versatile', 'Vexed', 'Wealthy', 'Wise', 'Witty', 'Woebegone', 'Worried', 'Worthy', 'Young', 'First', 'Second', 'Third', 'Fourth', 'Fifth', 'Sixth', 'Seventh', 'Eighth', 'Ninth', 'Tenth', 'Elder', 'Younger', 'Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Violet', 'Purple', 'Black', 'White', 'Gray', 'Longstrider', 'Waterwalker', 'Skysinger', 'Seasinger', 'Starsinger', 'Silver-tongued', 'Rocksplitter', 'Stonesplitter', 'Skysplitter', 'Seasplitter', 'Wavewalker', 'Stormbringer', 'Seer', 'Allseeing', 'Allknowing', 'Divine', 'Loose-lipped', 'Leader', 'Boss', 'Soulsifter', 'Shadowmarked', 'Soulmarked', 'Feytouched', 'Shadowtouched', 'Dreamwalker', 'Shadowstealer', 'Dreamstealer', 'Soulstealer', 'Shadowdancer', 'Rainbringer', 'Stormbringer', 'Harbinger', 'Milkdrinker', 'Light-fingered', 'Heavy-footed', 'Light-footed', 'Windwhisperer', 'Otherworlder', 'Outworlder', 'Deepworlder', 'Overworlder', 'Nightwalker', 'Daywalker', 'Shadewalker', 'Lightbringer', 'Stormtouched', 'Firetouched', 'Frost-touched']; 
  let raceOptions = ['alien', 'angelic',' birdfolk', ' celestial', ' centaur', ' changeling', 'child of a merfolk and a minotaur (who has inherited the human half of both), currently a local', ' cyclops', ' dark elf', ' demigod', ' demonic', ' devil', ' drake', ' dryad', ' dwarf', ' fae', ' fairy', ' foundling', ' ghostly', ' giant', ' gnoll', ' gnome', ' goblin', ' golem', ' gremlin', ' half-dwarf', ' half-elf', ' half-human', ' half-orc', ' halfling', ' high elf', ' homunculus', ' human', 'immortal', ' kappa', ' kitsune', ' kobold', ' lizardfolk', ' lycanthrope', ' merfolk', ' mutant', ' nymph', ' ogre', 'orc', ' poltergeist', ' polymorphed bear, currently a wandering', ' satyr', ' sentient floating skull, who is currently disguised as a newly arrived', ' sentient hat who possesses its wearer, currently posing as a lost', ' shapeshifter', ' skeleton', ' suspicious figure (actually three halflings in a trenchcoat) acting as an introverted', ' troll', ' vampire', ' weredragon', ' werehuman', ' wererat', ' werewolf', ' wood elf', ' zombie']; 
  let classOptions = ['acolyte', 'alchemist', 'apprentice', 'archer', 'artificer', 'artisan', 'artist', 'assassin', 'attendant', 'author', 'baker', 'bandit', 'bar-brawler', 'barbarian', 'bard', 'blacksmith', 'brigand', 'burglar', 'butcher', 'carriage driver', 'cartographer', 'chamberlain', 'charlatan', 'chef', 'civilian', 'cleric', 'clothier', 'cobbler', 'cook', 'courier', 'courtier', 'craftsperson', 'deckhand', 'diplomat', 'druid', 'elder', 'executioner', 'farmer', 'felon', 'fighter', 'fisherman', 'fishmonger', 'gladiator', 'graverobber', 'guard', 'guildmaster', 'healer', 'henchperson', 'herbalist', 'hero', 'housekeeper', 'hunter', 'huntsman', 'innkeeper', 'instructor', 'inventor', 'jack-of-all-trades', 'jailer', 'jester', 'jeweler', 'juggernaut', 'knight', 'laborer', 'lawyer', 'layabout', 'leatherworker', 'mage', 'marksman', 'mercenary', 'merchant', 'monk', "na'er-do-well", 'necromancer', 'ninja', 'noble', 'outcast', 'outlaw', 'paladin', 'peddler', 'philosopher', 'pickpocket', 'pilgrim', 'pirate', 'poacher', 'potioneer', 'priest', 'prisoner', 'professor', 'ranger', 'rebel', 'researcher', 'rogue', 'ruffian', 'sailor', 'samurai', 'scholar', 'scout', 'scoundrel', 'scribe', 'shaman', 'shepherd', 'sidekick', 'slayer', 'smuggler', 'soldier', 'sorcerer', 'spy', 'squire', 'stablehand', 'steward', 'streetfighter', 'student', 'swashbuckler', 'swindler', 'tailor', 'technomancer', 'templar', 'theif', 'thug', 'tinkerer', 'town crier', 'trader', 'trapper', 'traveler', 'trickster', 'troubador', 'tutor', 'urchin', 'vagabond', 'village elder', 'villager', 'villain', 'wanderer', 'warlock', 'warlord', 'watchman', 'weaponsmith', 'witchdoctor', 'wizard', 'youth']; 
  let emoteOptions = ["afraid of", "loves", "hates", "likes", "dislikes"];
  let thingOptions = ["bears", "water", "heights", "flying", "a neighboring village", "their sibling", "their spouse", "their parents", "spiders", "snakes", "baths", "birds", "squirrels", "a neighbor with a storied past", "their childhood rival", "their childhood crush", "the local villain", "the local hero", "an obscure scholar no one else has heard of", "a well-known bard", "small spaces", "books", "haute couture cloaks", "masks", "secrets", "lies", "creating drama", "their hometown", "magic", "swords", "street signs", "houses with thatched roofs", "stolen items", "skeletons", "mice", "strays", "violence", "oral histories", "ancient languages", "their best friend", "their worst enemy", "fine dining", "wild animals", "their childhood hero", "traps", "tricks", "pranks", "friendship", "art", "rumors", "education", "high society", "nobility", "peasants", "birds of prey", "thier past", "enchanted items", "communication devices", "technomagical advancements", "growing older", "an ongoing rebellion", "daring escapes", "crossroads", "collecting random trinkets", "dramatic entrances", "divination", "dueling", "mythical creatures", "hoarding knowledge", "alchemy", "a particular worn leather overcoat", "their former party members", "the local tavern", "fire", "precious metals", "gemstones", "bread", "ships", "wagons", "werecreatures", "easily disproven lies", "hats", "shoes", "mead", "horse-drawn carriages", "their youth", "white lies", "the concept of taxation", "wooden furniture", "stockings", "extremely lacy clothing", "forks", "another party member", "the law", "metal weapons", "leather armor", "the local gentry", "garishly embellished broadswords", "solitude", "large crowds", "festivals", "religious worship", "logical decision making", "self-portraits", "crows", "horses", "flight", "possible career advancement", "their skill level", "obscure local legends", "cryptography", "sweets", "statues", "tea", "fine china", "the thieves guild", "the mage's guild", "the merchant's guild", "the army", "the mercenary's guild", "the adventurer's guild", "the explorer's guild", "the druid's circle", "their old college", "their former conclave", "their former mentor", "their hometown temple", "their true age", "their name", "their job", "gossip", "betrayal", "a coming apocalypse", "their guild membership", "dual wielding", "interdimensional travel", "handpainted figurines", 'citrus fruits', 'chocolate', 'bread pudding', 'raw fish', 'meatloaf', 'ale', 'stale bread', 'wild boar sausages', 'beer', 'mystery meat', 'pickled vegetables', 'porridge', 'seafood', 'blue cheese', 'tinned fish', 'mushrooms', 'licorice', 'black pudding', 'mustard', 'fudge', 'pasta', 'pie', 'cake', 'candy', 'fondue', 'tea', 'hotpot', 'dumplings', 'quiche', 'steamed buns', 'raw fish', 'pastries', 'sweets', 'roasted nuts'];
  let groupOptions = ['the thieves guild', "the mage's guild", "the merchant's guild", 'the army', "the mercenary's guild", "the adventurer's guild", "the explorer's guild", "the druid's circle", 'the church']
  let activityOptions = ['arson', 'assassination', 'acting', 'art', 'astrology', 'astronomy', 'antiquing', 'axe throwing', 'baking', 'boardgames', 'book restoration', 'brewing their own ale', 'butterfly watching', 'calligraphy', 'candle making', 'candy making', 'card games', 'cleaning', 'community activism', 'cooking', 'creative writing', 'crocheting', 'cross-stitch', 'crossword puzzles', 'cryptography', 'changing jobs', 'dance', 'dioramas', 'drama', 'drawing', 'embroidery', 'engraving', 'espionage', 'entertaining', 'fashion', 'fingerpainting', 'flower arranging', 'flower pressing', 'fossil hunting', 'genealogy', 'glassblowing', 'gardening', 'hand-to-hand combat', 'home improvement', 'homebrewing', 'jewelry making', 'journaling', 'juggling', 'knitting', 'knot tying', 'lace making', 'leather crafting', 'lock picking', 'macrame', 'magic', 'meditation', 'metalworking', 'miniature art', 'model building', 'music', 'needlepoint', 'origami', 'painting', 'people watching', 'poetry', 'pottery', 'practical jokes', 'pranks', 'puppetry', 'puzzles', 'quilting', 'reading', 'scrapbooking', 'sculpting', 'sewing', 'singing', 'sketching', 'small talk', 'stockpiling resources', 'storytelling', 'tapestry weaving', 'fortune-telling', 'tattooing', 'taxidermy', 'telling jokes', 'thrifting', 'upcycling', 'weaving', 'whittling', 'winemaking', 'wood carving', 'woodworking', 'writing', 'amateur geology', 'archery', 'beachcombing', 'beekeeping', 'birdwatching', 'bodybuilding', 'camping', 'climbing', 'farming', 'fishing', 'foraging', 'graffiti', 'herbalism', 'jogging', 'parkour', 'rafting', 'rapelling', 'rock climbing', 'running', 'sailing', 'shopping', 'stone skipping', 'sun bathing', 'swimming', 'training', 'tourism', 'urban exploration', 'volunteering', 'archaeology', 'astronomy', 'biology', 'botany', 'business', 'entrepreneurship', 'geography', 'geology', 'history', 'linguistics', 'literature', 'mathematics', 'medical science', 'mycology', 'philosophy', 'physics', 'psychology', 'research', 'sociology', 'teaching', 'collecting art', 'collecting books', 'collecting buttons', 'collecting playing cards', 'collecting foreign coins', 'collecting knives', 'collecting minerals', 'collecting rocks', 'collecting sea glass', 'collecting seashells', 'collecting stones']
  let habitOptions = ['swears', 'stress-eats', 'overeats', 'forgets to eat', 'oversleeps', 'stays up too late', 'procrastinates', 'takes things personally', 'drinks too much', 'eats quickly', 'says yes to everything', 'gambles', 'impulse shops', "borrows money and 'forgets' to pay it back", 'gossips', 'lies', 'stares at people a little bit too long', 'interrupts other people when they are talking', 'talks to themselves', 'hums to themselves', 'stands too closely to other people', 'talks slowly', 'talks quickly', 'walks slowly', 'walks quickly', 'fidgets a lot', 'paces a lot', 'spaces out when things are uninteresting', 'walks away mid-conversation', 'talks about themselves constantly', 'easily distracted', 'ignores health problems', 'skips meals', 'binge eats', 'snacks while working', 'has bad posture', 'slacks off', 'gets obsessed with new hobbies', 'cancels plans last minute', 'avoids the outdoors', 'manipulates others', 'is easily manipulated', 'compulsively lies when asked a question', 'eavesdrops at every opportunity', 'spreads rumors', 'exercises a lot', 'networks at every opportunity', 'likes to haggle', 'gets up early', 'goes to bed early', 'keeps to a budget', 'takes risks', 'keeps to a routine', 'speaks formally', 'speaks informally', 'has good posture', 'eats balanced meals', 'makes friends easily', 'blames others for their mistakes', 'trys to convert others to their religion', 'accidentally creates magical items', 'sets fires', 'accidentally starts magical fires', 'misfires spells', 'feeds the local wildlife', 'brings home strays', 'brings home wild animals', 'cooks their own meals', 'lies about how much things are actually worth', 'lies about their current financial state', 'lies about their health', 'hates to worry others', 'hates to inconvenience others', 'flirts with anyone and everyone']
  let secretOptions = ["has a family secret involving", "zealously guards", "has a secret involving", "often talks about"];
  let secretAboutOptions = ["an oddly menacing golden ring", "a well-worn locket with a picture inside no one else has seen", "an old journal with a cracked leather cover", "absolutely nothing, they are obviously very normal, nothing to look at here", "a mysterious pendant with an ominous blue glow", "a particular worn leather overcoat", "an ornate sword too heavy for them to wield", "a dented helmet", "their past employment", "their knowledge of important subjects", "a family heirloom", "a stack of old letters bundled in twine", "a stack of sheet music rolled up and tied with green velvet ribbon", "a seemingly innocuous pebble", "a small wooden box, nailed shut", "a chipped porcelain teacup", "forbidden knowledge", "a recipe passed down for generations", "a cursed hairpin", "poisoned cookies", "the entrance to an underground tunnel system", "an old book that seems to whisper faintly to whoever reads it", "a shrine to a forgotten deity", "the true line of royal succession", "new technomagical innovations", "their medical research", "their magical research", "their scientific research", "their historical research", "their genealogical research", "a glittering white glove", "a jar of fire that burns brightly but puts out no heat", "an abandoned shack in the woods", "the location of their childhood home"]
//End of options arrays
  
  const randomize = (list) => {
    let output = list[Math.floor(Math.random() * list.length)];
    return output;
  }
  
//Calls randomize function on each category options array
  let descripGenerated = randomize(descripOptions);
  let raceGenerated = randomize(raceOptions);
  let classGenerated = randomize(classOptions);
  let emoteGenerated = randomize(emoteOptions);
  let thingGenerated = randomize(thingOptions);
  let groupGenerated = randomize(groupOptions);
  let hobbyGenerated = randomize(activityOptions);
  let habitGenerated = randomize(habitOptions);
  let secretGenerated = randomize(secretOptions);
  let secretAboutGenerated = randomize(secretAboutOptions);
  let textbreak = '<div class="item-break"> ~ </div>'

//Combines all outputs
  return ('<br> <div class="charName">' + sylGenerated + '</div> <br> <div class="charName2">' + 'The ' + descripGenerated + '</div>' + textbreak + raceGenerated + " " + classGenerated + textbreak + emoteGenerated + " " + thingGenerated + textbreak + 'involved with ' + groupGenerated + textbreak + 'enjoys ' + hobbyGenerated + textbreak + habitGenerated + textbreak + secretGenerated + " " + secretAboutGenerated + textbreak);
};
//End of createCharacter function

//Button event
function displayCharacter(createCharacter) {
  var placeholder = document.getElementById('placeholder');
  placeholder.innerHTML = createCharacter;
}

var button= document.getElementById('btn');
button.onclick = function() {
  var result = createCharacter();
  displayCharacter(result);
}
